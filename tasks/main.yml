---
# tasks file for rabbitmq
- name: change hostname (clustering)
  hostname:
    name: "{{ rabbitmq_hostname }}"
  when: rabbitmq_cluster

- name: add erlang key (Ubuntu/Debian)
  apt_key:
    url: http://packages.erlang-solutions.com/ubuntu/erlang_solutions.asc
    state: present
  when: ansible_os_family == 'Debian' and use_erlang_solutions_repo

- name: add erlang repo (Ubuntu)
  apt_repository:
    repo: "deb https://packages.erlang-solutions.com/ubuntu {{ ansible_distribution_release }} contrib"
    state: present
    update_cache: yes
  when: ansible_distribution == 'Ubuntu' and use_erlang_solutions_repo

- name: add erlang repo (Debian)
  apt_repository:
    repo: deb http://packages.erlang-solutions.com/debian wheezy contrib
    state: present
    update_cache: yes
  when: ansible_distribution == 'Debian' and use_erlang_solutions_repo

- name: add rabbitmq key (Debian)
  apt_key:
    url: https://www.rabbitmq.com/rabbitmq-release-signing-key.asc
    state: present
  when: ansible_os_family == 'Debian'

- name: add rabbitmq repo (Debian)
  apt_repository:
    repo: deb http://www.rabbitmq.com/debian/ testing main
    state: present
    update_cache: yes
  when: ansible_os_family == 'Debian'

- name: install packages (Erlang Solutions repo enabled)
  apt:
    name: "{{ item }}"
    state: present
  when: ansible_os_family == 'Debian' and use_erlang_solutions_repo
  with_items:
    - esl-erlang={{ erlang_version }}
    - rabbitmq-server={{ rabbitmq_version }}

- name: install packages (when default repo is used)
  package:
    name: "rabbitmq-server"
    state: present
  when: not use_erlang_solutions_repo

- name: shutdown rabbitmq to change cookie and conf file
  service:
    name: rabbitmq-server
    state: stopped

- name: cluster rabbitmq servers (clustering)
  include: cluster.yml
  when: rabbitmq_cluster

- name: configure rabbitmq-server
  template:
    src: rabbitmq.config.j2
    dest: /etc/rabbitmq/rabbitmq.config

- name: start rabbitmq-server
  service:
    name: rabbitmq-server
    state: started

- name: enable management plugin
  rabbitmq_plugin:
     name: rabbitmq_management
     state: enabled
  when: rabbitmq_manage

- name: Setup rabbitmq user with admin access
  rabbitmq_user:
    user: "{{ rabbitmq_default_user }}"
    password: "{{ rabbitmq_default_pass }}"
    vhost: "{{ rabbitmq_default_vhost }}"
    configure_priv: "{{ rabbitmq_configure_priv }}"
    read_priv: "{{ rabbitmq_read_priv }}"
    write_priv: "{{ rabbitmq_write_priv }}"
    tags: "{{ rabbitmq_default_user_tags }}"
    state: "{{ rabbitmq_user_state }}"
  when: make_rabbitmq_user

- name: Enable plugins
  rabbitmq_plugin:
    names: "{{ rabbitmq_plugins }}"
    state: enabled
  when: rabbitmq_plugins is defined
